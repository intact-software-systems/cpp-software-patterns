cmake_minimum_required(VERSION 3.2)
project(BaseLib)

add_definitions(-DMAKE_DLL_BaseLib)

SET(LIB_NAME BaseLib)
SET(SOURCE_PATH ${ONE_SOURCE_DIR}/${LIB_NAME})

set(SOURCE_FILES
        Collection/BlockingQueue.h
        Collection/Collection.h
        Collection/CollectionUtils.h
        Collection/ConcurrentMap.h
        Collection/ConcurrentSet.h
        Collection/IHeap.h
        Collection/IList.h
        Collection/IMap.h
        Collection/IncludeLibs.h
        Collection/ISet.h
        Collection/PCList.h
        Collection/WeightedFairQueue.h
        Policy/Attempt.h
        Policy/CommonDefines.h
        Policy/Composition.h
        Policy/Computation.h
        Policy/Congestion.h
        Policy/Criterion.h
        Policy/Deadline.h
        Policy/Eviction.h
        Policy/FaultTolerance.h
        Policy/History.h
        Policy/IncludeLibs.h
        Policy/Instance.h
        Policy/Interval.h
        Policy/Invocation.h
        Policy/LeasePlan.h
        Policy/Lifespan.h
        Policy/LoadBalance.h
        Policy/MaxLimit.h
        Policy/MinLimit.h
        Policy/Ordering.h
        Policy/Priority.h
        Policy/Range.h
        Policy/Reaction.h
        Policy/Redundancy.h
        Policy/Reload.h
        Policy/Replay.h
        Policy/Replication.h
        Policy/ResourceLimits.h
        Policy/SizeLimits.h
        Policy/Throughput.h
        Policy/TimeBasedFilter.h
        Policy/Timeout.h
        Policy/Flyweight.h
        Policy/Flyweight.cpp
        Policy/UndoRedo.h
        Policy/Reliability.cpp
        Policy/Reliability.h
        Policy/Communication.h
        Policy/DestinationOrder.h
        Policy/Durability.h
        Policy/LatencyBudget.h
        Policy/Liveliness.h
        Policy/Ownership.h
        Policy/UserData.h
        Policy/Activation.h
        Status/AccessCount.cpp
        Status/AccessCount.h
        Status/AccessStatus.cpp
        Status/AccessStatus.h
        Status/AccessTime.cpp
        Status/AccessTime.h
        Status/EventCount.cpp
        Status/EventCount.h
        Status/EventStatus.cpp
        Status/EventStatus.h
        Status/EventTime.cpp
        Status/EventTime.h
        Status/ExecutionCount.cpp
        Status/ExecutionCount.h
        Status/ExecutionStatus.cpp
        Status/ExecutionStatus.h
        Status/ExecutionTime.cpp
        Status/ExecutionTime.h
        Status/FlowStatus.cpp
        Status/FlowStatus.h
        Status/Fraction.cpp
        Status/Fraction.h
        Status/FutureStatus.cpp
        Status/FutureStatus.h
        Status/IncludeLibs.h
        Status/ObserverStatus.cpp
        Status/ObserverStatus.h
        Status/Rate.cpp
        Status/Rate.h
        Status/SubjectStatus.cpp
        Status/SubjectStatus.h
        Status/EventStatusMethods.h
        Status/Metric.h
        Status/StatusTracker.h
        Status/ActivationStatus.cpp
        Status/ActivationStatus.h
        Strategy/ExecutionChecker.cpp
        Strategy/ExecutionChecker.h
        Strategy/ExecutionStrategy.cpp
        Strategy/ExecutionStrategy.h
        Strategy/IncludeLibs.h
        Templates/ActionHolder.h
        Templates/AnyKeyType.h
        Templates/AnyType.h
        Templates/SharedType.h
        Templates/BasePtrTypes.h
        Templates/BaseTypes.cpp
        Templates/BaseTypes.h
        Templates/ContextObject.h
        Templates/ContextObjectPtr.h
        Templates/CountingHandle.h
        Templates/DoubleCheckedLocking.h
        Templates/EventType.h
        Templates/FactoryTypes.h
        Templates/FilterMethods.h
        Templates/FlyweightTypes.h
        Templates/FunctionHolder.h
        Templates/FunctionPointer.h
        Templates/FunctorHolder.h
        Templates/FutureRunnable.h
        Templates/IncludeLibs.h
        Templates/IntegrationType.h
        Templates/IteratorBase.h
        Templates/KeyType.h
        Templates/TriggerCondition.h
        Templates/LeasingType.h
        Templates/Lifecycle.h
        Templates/MethodInterfaces.h
        Templates/ProtectedBool.h
        Templates/ScheduledFuture.h
        Templates/Serialize.h
        Templates/StateMethods.h
        Templates/StrategyActionMethods.h
        Templates/StrategyContextActionMethods.h
        Templates/SchedulerMethods.h
        Templates/FunctionProxy.h
        Templates/StrategyMethods.h
        Templates/Synchronization.h
        Templates/UtilityFunctions.h
        Templates/NameDescription.h
        Templates/NameDescription.cpp
        Templates/TranslatorValidatorMethods.h
        Templates/Value.h
        Templates/EventData.h
        Templates/ObjectsManager.h
        CommonClasses.cpp
        CommonClasses.h
        CommonDefines.cpp
        CommonDefines.h
        CommonOperators.cpp
        CommonOperators.h
        Count.cpp
        Count.h
        Debug.cpp
        Debug.h
        Duration.cpp
        Duration.h
        ElapsedTimer.cpp
        ElapsedTimer.h
        Exception.cpp
        Exception.h
        ExceptionManager.cpp
        ExceptionManager.h
        Export.h
        Event.h
        Event.cpp
        IncludeLibs.h
        InstanceHandle.cpp
        InstanceHandle.h
        InterruptHandler.cpp
        InterruptHandler.h
        LogDebug.cpp
        LogDebug.h
        Multiton.h
        Mutex.cpp
        Mutex.h
        StdMutex.cpp
        StdMutex.h
        MutexPolicy.cpp
        MutexPolicy.h
        MutexBare.cpp
        MutexBare.h
        MutexLocker.cpp
        MutexLocker.h
        ObjectBase.cpp
        ObjectBase.h
        ObjectManager.cpp
        ObjectManager.h
        Process.h
        ProtectedVar.cpp
        ProtectedVar.h
        ReadLocker.cpp
        ReadLocker.h
        ReadWriteLock.cpp
        ReadWriteLock.h
        Runnable.h
        Singleton.cpp
        Singleton.h
        Thread.cpp
        Thread.h
        StdThread.cpp
        StdThread.h
        GUUID.h
        GUUID.cpp
        ThreadManager.cpp
        ThreadManager.h
        Timestamp.cpp
        Timestamp.h
        ScopedTimers.h
        Typename.cpp
        Typename.h
        Utility.cpp
        Utility.h
        WaitCondition.cpp
        WaitCondition.h
        WaitConditionType.h
        StdWaitCondition.cpp
        StdWaitCondition.h
        InterruptibleWaitCondition.h
        InterruptibleWaitCondition.cpp
        WriteLocker.cpp
        WriteLocker.h
        Collection/RingBufferQueue.h
        Collection/RingBufferQueuePolicy.h
        Collection/RingBufferQueuePolicy.cpp
        )

include_directories(${ONE_SOURCE_DIR})
add_library(BaseLib SHARED ${SOURCE_FILES})
